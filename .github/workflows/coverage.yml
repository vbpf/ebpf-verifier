# Copyright (c) Prevail Verifier contributors.
# SPDX-License-Identifier: MIT

name: CPP Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_ubuntu:
    strategy:
      matrix:
        configurations: [Debug, Release]
    runs-on: ubuntu-20.04
    env:
      # Configuration type to build.  For documentation on how build matrices work, see
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

    steps:
      - name: Install dependencies
        run: |
          sudo apt install libboost-dev libyaml-cpp-dev lcov
          pip install gcovr

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Build
        run: |
          mkdir build
          cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -DCMAKE_CXX_FLAGS="--coverage -fprofile-arcs -ftest-coverage -g"
          cmake --build build -j $(nproc)

      - name: Run unit tests
        run: ./tests -d yes

      - name: Generate code coverage report
        run: |
          cd build
          gcovr -r .. -e '../external/.*' -e '../src/test/.*' --cobertura ../ebpf-verifier.xml --gcov-ignore-parse-errors --exclude-unreachable-branches
          mkdir ../coverage
          lcov --capture --directory . --output-file ../coverage/lcov.info

      - name: Upload Report to Codecov
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        with:
          files: ebpf-verifier.xml
          fail_ci_if_error: true
          functionalities: fix

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.github_token }}
          flag-name: run-${{ matrix.configurations }}
          parallel: true

  finish:
    needs: build_ubuntu
    runs-on: ubuntu-20.04
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.github_token }}
        parallel-finished: true