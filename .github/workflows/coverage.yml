# Copyright (c) Prevail Verifier contributors.
# SPDX-License-Identifier: MIT

name: CPP Code Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  # Cancel any CI/CD workflow currently in progress for the same PR.
  # Allow running concurrently with any other commits.
  group: build-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  build_ubuntu:
    strategy:
      matrix:
        configurations: [Debug, Release]
    runs-on: ubuntu-20.04
    env:
      # Configuration type to build.  For documentation on how build matrices work, see
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

    steps:
      - name: Install dependencies
        run: |
          sudo apt install libboost-dev libyaml-cpp-dev
          pip install gcovr

      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Build
        run: |
          mkdir build
          cmake -B build -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -DCMAKE_CXX_FLAGS="--coverage -g -O0"
          cmake --build build -j $(nproc)

      - name: Run unit tests
        run: ./tests -d yes

      - name: Generate code coverage report
        run: |
          cd build
          gcovr -r .. -e ../external/ -e src/test --cobertura ../ebpf-verifier.xml --gcov-ignore-parse-errors --exclude-unreachable-branches

      - name: Upload Report to Codecov
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        with:
          files: ebpf-verifier.xml
          fail_ci_if_error: true
          functionalities: fix

  build_windows:
    strategy:
      matrix:
        configurations: [Debug, Release]
    runs-on: windows-2019
    env:
      # Configuration type to build.  For documentation on how build matrices work, see
      # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
      BUILD_CONFIGURATION: ${{matrix.configurations}}

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - name: Build
        run: |
          mkdir build
          cmake -B build
          cmake --build build -j $(nproc) --config ${{env.BUILD_CONFIGURATION}}

      - name: Set up OpenCppCoverage and add to PATH
        id: set_up_opencppcoverage
        run: |
          choco install -y --requirechecksum=true --checksum=2295A733DA39412C61E4F478677519DD0BB1893D88313CE56B468C9E50517888 --checksum-type=sha256 OpenCppCoverage
          echo "C:\Program Files\OpenCppCoverage" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Run unit tests with code coverage
        id: run_test_with_code_coverage
        shell: cmd
        run: |
          OpenCppCoverage.exe --sources %CD% --export_type cobertura:ebpf_verifer.xml --working_dir %CD% -- ./${{env.BUILD_CONFIGURATION}}/tests -d yes


      - name: Upload Report to Codecov
        uses: codecov/codecov-action@81cd2dc8148241f03f5839d295e000b8f761e378
        with:
          files: ebpf-verifier.xml
          fail_ci_if_error: true
          functionalities: fix
