# Copyright (c) Prevail Verifier contributors.
# SPDX-License-Identifier: MIT
---
test-case: simple invalid access

pre: [
    "meta_offset=0",
    "r1.type=packet", "r1.offset=0", "r1.value=[4098, 2147418112]",
    "r2.type=packet", "r2.offset=[0, 65534]", "packet_size=r2.offset", "packet_size=[0, 65534]"
]

code:
  <start>: |
    r4 = 0
    *(u64 *)(r1 + 0) = r4

post: [
    "meta_offset=0",
    "r1.type=packet", "r1.offset=0", "r1.value=[4098, 2147418112]",
    "r2.type=packet", "r2.offset=[0, 65534]", "packet_size=r2.offset",
    "packet_size=[0, 65534]", "r4.type=number", "r4.value=0"
]
messages:
  - "1: Upper bound must be at most packet_size (valid_access(r1.offset, width=8))"

---
test-case: writing 8 bytes when packet size is 4

pre: [
    "meta_offset=0",
    "r1.type=packet", "r1.offset=0", "r1.value=[4098, 2147418112]",
    "r2.type=packet", "r2.offset=[0, 65534]", "packet_size=r2.offset"
]

code:
  <start>: |
    r3 = r1;
    r3 += 4;
    if r3 > r2 goto <out>
    r4 = 0
    *(u64 *)(r1 + 0) = r4
  <out>: |
    r5=r5

post: [
    "meta_offset=0",
    "r1.type=packet", "r1.offset=0", "r1.value=[4098, 2147418112]",
    "r2.type=packet", "r2.offset=[0, 65534]", "packet_size=r2.offset",
    "r3.type=packet", "r3.offset=4", "r3.value=[4102, 2147418116]",
    "packet_size-r3.offset<=65530", "packet_size=[0, 65534]",
    "r3.offset-packet_size<=4", "r1.value=r3.value+4",
    "r2.offset-r3.offset<=65530", "r3.offset-r2.offset<=4",
    "r1.region_size=r3.region_size"
]
messages:
  - "4: Upper bound must be at most packet_size (valid_access(r1.offset, width=8))"

---
test-case: simple valid access

pre: [
    "meta_offset=0",
    "r1.type=packet", "r1.offset=0", "r1.value=[4098, 2147418112]",
    "r2.type=packet", "r2.offset=[0, 65534]", "packet_size=r2.offset",
    "r1.region_size=packet_size",
    "r2.region_size=packet_size",
]

code:
  <start>: |
    r3 = r1;
    r3 += 8;
    if r3 > r2 goto <out>
    r4 = 0
    *(u64 *)(r1 + 0) = r4
  <out>: |
    r5=r5

post: [
    "meta_offset=0",
    "r1.type=packet", "r1.offset=0", "r1.value=[4098, 2147418112]",
    "r2.type=packet", "r2.offset=[0, 65534]", "packet_size=r2.offset",
    "r3.type=packet", "r3.offset=8", "r3.value=[4106, 2147418120]",
    "packet_size-r3.offset<=65526", "packet_size=[0, 65534]",
    "r3.offset-packet_size<=8", "r1.value=r3.value+8",
    "r2.offset-r3.offset<=65526", "r3.offset-r2.offset<=8",
    "r1.region_size=r3.region_size",
    "packet_size=r1.region_size", "packet_size=r2.region_size", "packet_size=r3.region_size",
    "r1.region_size-r3.offset<=65526", "r1.region_size=[0, 65534]", "r1.region_size=r2.offset",
    "r1.region_size=r2.region_size", "r2.offset=r2.region_size", "r2.offset=r3.region_size",
    "r2.region_size-r3.offset<=65526", "r2.region_size=[0, 65534]", "r2.region_size=r3.region_size",
    "r3.offset-r1.region_size<=8", "r3.offset-r2.region_size<=8", "r3.offset-r3.region_size<=8", "r3.region_size-r3.offset<=65526",
    "r3.region_size=[0, 65534]"
]
