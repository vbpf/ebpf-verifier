# Copyright (c) Prevail Verifier contributors.
# SPDX-License-Identifier: MIT
---
test-case: Bitwise OR imm

pre: ["r1.type=number", "r1.svalue=-9223372036854775808", "r1.uvalue=9223372036854775808"]

code:
  <start>: |
    r1 |= 1 ; 0x8000000000000000 | 1

post: ["r1.type=number", "r1.svalue=-9223372036854775807", "r1.uvalue=9223372036854775809"]
---
test-case: Bitwise OR reg

pre: ["r1.type=number", "r1.svalue=-9223372036854775808", "r1.uvalue=9223372036854775808",
      "r2.type=number", "r2.svalue=1", "r2.uvalue=1"]

code:
  <start>: |
    r1 |= r2 ; 0x8000000000000000 | 1

post: ["r1.type=number", "r1.svalue=-9223372036854775807", "r1.uvalue=9223372036854775809",
       "r2.type=number", "r2.svalue=1", "r2.uvalue=1"]
---
test-case: Bitwise XOR imm

pre: ["r1.type=number", "r1.svalue=-9223372036854775807", "r1.uvalue=9223372036854775809"]

code:
  <start>: |
    r1 ^= 3 ; 0x8000000000000001 ^ 3

post: ["r1.type=number", "r1.svalue=-9223372036854775806", "r1.uvalue=9223372036854775810"]
---
test-case: Bitwise XOR reg

pre: ["r1.type=number", "r1.svalue=-9223372036854775807", "r1.uvalue=9223372036854775809",
      "r2.type=number", "r2.svalue=3", "r2.uvalue=3"]

code:
  <start>: |
    r1 ^= r2 ; 0x8000000000000001 ^ 3

post: ["r1.type=number", "r1.svalue=-9223372036854775806", "r1.uvalue=9223372036854775810",
       "r2.type=number", "r2.svalue=3", "r2.uvalue=3"]
---
test-case: Bitwise AND imm

pre: ["r1.type=number", "r1.svalue=-9223372036854775805", "r1.uvalue=9223372036854775811"]

code:
  <start>: |
    r1 &= 5 ; 0x8000000000000003 & 5

post: ["r1.type=number", "r1.svalue=1", "r1.uvalue=1"]
---
test-case: Bitwise AND reg

pre: ["r1.type=number", "r1.svalue=-9223372036854775805", "r1.uvalue=9223372036854775811",
      "r2.type=number", "r2.svalue=-9223372036854775803", "r2.uvalue=9223372036854775813"]

code:
  <start>: |
    r1 &= r2 ; 0x8000000000000003 & 0x8000000000000005 = 0x8000000000000001

post: ["r1.type=number", "r1.svalue=-9223372036854775807", "r1.uvalue=9223372036854775809",
       "r2.type=number", "r2.svalue=-9223372036854775803", "r2.uvalue=9223372036854775813"]
---
test-case: Bitwise [-1, 1] AND 0 == 0

pre: ["r1.type=number", "r1.svalue=[-1, 1]"]

code:
  <start>: |
    r1 &= 0

post: ["r1.type=number", "r1.svalue=0", "r1.uvalue=0"]
---
test-case: Bitwise 2 AND 1 == 0

pre: ["r1.type=number", "r1.svalue=2", "r1.uvalue=2"]

code:
  <start>: |
    r1 &= 1

post: ["r1.type=number", "r1.svalue=0", "r1.uvalue=0"]
