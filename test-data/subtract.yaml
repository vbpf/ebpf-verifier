# Copyright (c) Prevail Verifier contributors.
# SPDX-License-Identifier: MIT
---
test-case: subtract immediate from large singleton number

pre: ["r0.type=number", "r0.svalue=2147483649", "r0.uvalue=2147483649"]

code:
  <start>: |
    r0 -= 2 ; make sure value does not become a negative 64 bit number

post:
  - r0.type=number
  - r0.svalue=2147483647
  - r0.uvalue=2147483647
---
test-case: subtract immediate from large number range

pre: ["r0.type=number", "r0.svalue=[2147483649, 2147483651]", "r0.uvalue=[2147483649, 2147483651]"]

code:
  <start>: |
    r0 -= 4 ; make sure value does not become a negative 64 bit number

post:
  - r0.type=number
  - r0.svalue=[2147483645, 2147483647]
  - r0.uvalue=r0.svalue
---
test-case: subtract a register from itself

pre: ["r1.type=number"]

code:
  <start>: |
    r1 -= r1

post:
  - r1.type=number
  - r1.svalue=0
  - r1.uvalue=0
---
test-case: allow subtraction of packet pointers

pre: ["r2.type=packet", "r2.packet_offset=4", "meta_offset=-4", "packet_size=[16,32]",
      "r3.type=packet", "r3.packet_offset=8"]

code:
  <start>: |
    r3 -= r2

post:
  - r2.type=packet
  - r2.packet_offset=4
  - r3.type=number
  - r3.svalue=4
  - r3.uvalue=4
  - meta_offset=-4
  - packet_size=[16, 32]
---
test-case: disallow subtraction of shared pointers

pre: ["r2.type=shared", "r2.shared_region_size=8", "r2.shared_offset=4",
      "r3.type=shared", "r3.shared_region_size=8", "r3.shared_offset=8"]

code:
  <start>: |
    r3 -= r2

post:
  - r2.type=shared
  - r2.shared_offset=4
  - r2.shared_region_size=8
  - r3.type=number
  - r3.svalue=4
  - r3.uvalue=4

messages:
  - "0: Cannot subtract pointers to non-singleton regions (r2.type == number or r3.type == r2.type in {ctx, stack, packet})"
---
test-case: disallow subtraction of unequal dual-typed pointers

pre: ["r2.type=[-2, -1]", "r2.packet_offset=4", "r2.stack_offset=4",
      "r3.type=[-2, -1]", "r3.packet_offset=8", "r3.stack_offset=8"]

code:
  <start>: |
    r3 -= r2

post:
  - r2.type in {packet, stack}
  - r2.packet_offset=4
  - r2.stack_offset=4

messages:
  - "0: Cannot subtract pointers to different regions (r2.type == number or r3.type == r2.type in {ctx, stack, packet})"

---
test-case: allow subtraction of equal dual-typed pointers

pre: ["r2.type=[-2, -1]", "r2.packet_offset=4", "r2.stack_offset=4",
      "r3.type=[-2, -1]", "r3.packet_offset=8", "r3.stack_offset=8",
      "r2.type=r3.type", "meta_offset=-4", "packet_size=[16,32]",
      "r10.type=stack", "r10.stack_offset=512"]

code:
  <start>: |
    r3 -= r2

post:
  - r2.type in {packet, stack}
  - r2.packet_offset=4
  - r2.stack_offset=4
  - r3.type=number
  - r3.svalue=4
  - r3.uvalue=4
  - r10.type=stack
  - r10.stack_offset=512
  - meta_offset=-4
  - packet_size=[16, 32]

---
test-case: allow subtraction of numeric register from valid pointer

pre: ["r1.type=stack", "r1.stack_offset=[500, 504]",
      "r2.type=number", "r2.svalue=4", "r2.uvalue=4"]

code:
  <start>: |
    r1 -= r2

post:
  - r1.type=stack
  - r1.stack_offset=[496, 500]
  - r2.type=number
  - r2.svalue=4
  - r2.uvalue=4

---
test-case: disallow subtraction of pointer from invalid pointer to a singleton region

pre: ["r1.type=stack", "r1.stack_offset=[4040, 4130]",
      "r2.type=stack", "r2.stack_offset=[140, 230]",
      "r10.type=stack", "r10.stack_offset=4096"]

code:
  <start>: |
    r1 -= r2

post:
  - r1.type=number
  - r1.svalue=[3810, 3990]
  - r1.uvalue=r1.svalue
  - r2.type=stack
  - r2.stack_offset=[140, 230]
  - r10.type=stack
  - r10.stack_offset=4096
messages:
  - "0: Upper bound must be at most EBPF_TOTAL_STACK_SIZE (r2.type == number or r1.type == r2.type in {ctx, stack, packet})"
  - "0: Lower bound must be at least r10.stack_offset - EBPF_SUBPROGRAM_STACK_SIZE (r2.type == number or r1.type == r2.type in {ctx, stack, packet})"
